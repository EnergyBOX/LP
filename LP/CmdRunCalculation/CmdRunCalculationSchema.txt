[Start]
   |
   v
[Отримати документ Revit]
   |
   v
[Зчитати глобальний параметр LP_Radius]
   |---[R <= 0 ?]---Yes---> [Показати повідомлення про помилку] ---> [End/Failed]
   |
   No
   |
   v
[Знайти всі елементи з LP_Is_LightningRod = true]
   |---[Не знайдено?]---Yes---> [Показати повідомлення: блискавкоприймачі не знайдено] ---> [End/Failed]
   |
   No
   |
   v
[Обчислити верхівки кожного блискавкоприймача]
   |---[Не вдалося обчислити?]---Yes---> [Показати повідомлення] ---> [End/Failed]
   |
   No
   |
   v
[Створити просторовий індекс SpatialHash3D]
   |
   v
[Для кожної тріади верхівок (i,j,k) у локальному сусідстві:]
   |
   v
[Обчислити перетин трьох сфер SphereMath]
   |---[0 точок?]---Yes---> [Пропустити]
   |
   No
   |
   v
[Вибрати точку вставки (1 точка або вища з 2)]
   |
   v
[Перевірити, що інші верхівки не всередині (Collision.HasInteriorPoint)]
   |---[Інші всередині?]---Yes---> [Пропустити]
   |
   No
   |
   v
[Вставити Void-сферу (LP_Sphere) у точку вставки з типом відповідно до радіусу]
   |
   v
[Додати сферу до списку кандидатів]
   |
   v
[Кінець циклу тріад]
   |
   v
[Дедуплікація сфер за центром та радіусом]
   |
   v
[Знайти всі зони захисту (LP_Is_ProtectedZone = true)]
   |
   v
[Для кожної зони:]
   |
   v
[Виконати операції Cut із усіма вставленими Void-сферами]
   |---[Cut не вдалося?]---Yes---> [Пропустити та зафіксувати у звіті]
   |
   No
   |
   v
[Кінець циклу зон]
   |
   v
[Показати TaskDialog: звіт про результати]
   |
   v
[End/Success]





Ось повна редакція технічного завдання (ТЗ) для класу **`CmdRunCalculation`** з урахуванням усіх уточнень: обчислення точок пересікання сфер, вставка Void-сфер та обрізання зон захисту. Це ТЗ готове для передачі розробнику.

---

# **Технічне завдання: Обчислення та обрізання зон захисту блискавкоприймачів у Revit**

## **1. Мета**

Розробити Revit External Command, який:

1. Знаходить усі активні блискавкоприймачі у моделі.
2. Обчислює їх верхівки.
3. Формує кандидати сфер захисту (як перетини трьох сфер однакового радіусу) та одразу вставляє Void-сфери у модель.
4. Дедуплікує сфери.
5. Виконує операції Cut Void-сфер по відношенню до зон захисту (Protected Zones).
6. Виводить підсумковий звіт користувачу.

---

## **2. Вхідні дані**

1. **Глобальні параметри:**

   * `LP_Radius` — радіус сфери блискавкоприймача (double, >0).

2. **Параметри елементів:**

   * `LP_Is_LightningRod` — логічний параметр для позначення блискавкоприймача.
   * `LP_Is_ProtectedZone` — логічний параметр для позначення зон захисту.

3. **Елементи:**

   * Блискавкоприймачі (Lightning Rods) з параметром `LP_Is_LightningRod = true`.
   * Зони захисту (Protected Zones) з параметром `LP_Is_ProtectedZone = true`.
   * Сімейство Void Sphere (`LP_Sphere`) для вставки сфер у модель.

---

## **3. Алгоритм обчислення**

### **3.1. Пошук елементів**

1. Знайти всі елементи з параметром `LP_Is_LightningRod = true`.
2. Якщо елементи не знайдено — вивести повідомлення і завершити процес.

---

### **3.2. Обчислення верхівок**

1. Для кожного блискавкоприймача визначити точку верхівки (`ComputeTipPoints`).
2. Створити список `tips` з координатами верхівок.
3. Якщо верхівки не обчислено — вивести повідомлення і завершити процес.

---

### **3.3. Побудова просторового індексу**

1. Створити тривимірний просторовий індекс (`SpatialHash3D`) з розміром осередку `2*R`.
2. Додати всі верхівки у індекс для швидкого пошуку сусідів.

---

### **3.4. Формування кандидатів сфер та вставка Void-сфер**

1. Для кожної тріади верхівок `(pi, pj, pk)` (i < j < k):

   * Обчислити перетин трьох сфер з радіусом `R` (`SphereMath.IntersectThreeEqualSpheres`).
   * Вибрати центр точки вставки:

     * 0 точок → пропустити.
     * 1 точка → використовувати її.
     * 2 точки → вибрати точку з більшою координатою Z.
   * Перевірити, що жодна інша верхівка не потрапляє всередину сфери (`Collision.HasInteriorPoint`).
   * **Вставка Void-сфери у Revit:**

     * Створити екземпляр сімейства `LP_Sphere` у точці центру.
     * Вибрати тип сімейства відповідно до радіусу сфери.
   * Додати сферу до списку кандидатів для подальшої дедуплікації.

2. Після обробки всіх тріад:

   * Виконати дедуплікацію сфер за координатами центру та радіусом (`Sphere.Deduplicate`).
   * Усі сфери вже вставлені у модель і готові до Cut із зонами захисту.

---

### **3.5. Обрізання зон захисту**

1. Знайти всі елементи з параметром `LP_Is_ProtectedZone = true`.
2. Для кожної зони:

   * Виконати операції `Cut` (`ElementUtils.CutElements` або аналогічний API) з усіма вставленими Void-сферами.
   * У разі невдалого Cut пропустити зону і зафіксувати у звіті.

---

## **4. Транзакції**

1. Використовувати `TransactionGroup` для об’єднання всього процесу:

   * Start → Execute → Assimilate / RollBack.
2. Кожну вставку Void-сфери та операції Cut проводити у внутрішніх транзакціях Revit.

---

## **5. Вивід результатів**

Після завершення обчислень показати TaskDialog з підсумком:

* Кількість знайдених блискавкоприймачів.
* Кількість обчислених верхівок.
* Кількість кандидатських сфер.
* Кількість унікальних сфер після дедуплікації.
* Кількість успішно обрізаних зон захисту.

---

## **6. Обробка помилок**

1. Перевірка наявності глобального параметра `LP_Radius`.
2. Перевірка наявності блискавкоприймачів і верхівок.
3. Використання `try/catch` для обробки виключень.
4. Пропуск проблемних зон під час Cut (не зупиняти весь процес).

---

## **7. Вимоги до коду**

* Використання Revit API 2024.
* Чітка структура з утилітними класами:

  * `GlobalParams` — робота з глобальними параметрами.
  * `Query` — пошук елементів за параметрами.
  * `GeometryUtils` — обчислення верхівок.
  * `SpatialHash3D` — просторовий індекс.
  * `SphereMath` — обчислення перетину сфер.
  * `Collision` — перевірка на попадання інших верхівок.
  * `DirectShapeUtils` або `ElementUtils` — вставка сімейств і операції Cut.
* Використання адекватної продуктивності: пакетна обробка та дедуплікація для великих моделей.

---

Якщо хочеш, я можу ще намалювати **блок-схему алгоритму** з усіма етапами: від пошуку блискавкоприймачів до вставки Void-сфер і Cut зон. Це добре працює як приклад у ТЗ.

Хочеш, щоб я зробив блок-схему?
